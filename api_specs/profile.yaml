paths:
  /profile:
    get:
      tags:
        - profile
      summary: Get user profile
      operationId: getProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'

    put:
      tags:
        - profile
      summary: Update user profile
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

components:
  schemas:
    Profile:
      type: object
      required:
        - id
        - name
        - age
        - height
        - weight
        - branch
        - fitnessWaivers
        - dietaryRestrictions
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: John Doe
        age:
          type: integer
          format: int32
          minimum: 18
          maximum: 100
          example: 30
        height:
          type: number
          format: float
          minimum: 0
          example: 180.5
        weight:
          type: number
          format: float
          minimum: 0
          example: 75.5
        branch:
          type: string
          enum: [Army, Navy, Air Force, Marines, Coast Guard, Space Force]
          example: Army
        currentInstallation:
          type: string
          example: Fort Bragg
        fitnessWaivers:
          type: string
          example: None
        dietaryRestrictions:
          type: string
          example: Lactose intolerant
        fitnessGoals:
          type: string
          example: Improve 5K run time
        nutritionGoals:
          type: string
          example: Increase protein intake
        fitnessPreferences:
          type: string
          example: Outdoor cardio, weight training
        diningFacilityUsage:
          type: integer
          minimum: 0
          maximum: 100
          example: 60
        onBaseRestaurantUsage:
          type: integer
          minimum: 0
          maximum: 100
          example: 20
        offBaseRestaurantUsage:
          type: integer
          minimum: 0
          maximum: 100
          example: 10
        homeCookingFrequency:
          type: integer
          minimum: 0
          maximum: 100
          example: 10

    ProfileUpdate:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
          minimum: 18
          maximum: 100
        height:
          type: number
          format: float
          minimum: 0
        weight:
          type: number
          format: float
          minimum: 0
        branch:
          type: string
          enum: [Army, Navy, Air Force, Marines, Coast Guard, Space Force]
        currentInstallation:
          type: string
        fitnessWaivers:
          type: string
        dietaryRestrictions:
          type: string
        fitnessGoals:
          type: string
        nutritionGoals:
          type: string
        fitnessPreferences:
          type: string
        diningFacilityUsage:
          type: integer
          minimum: 0
          maximum: 100
        onBaseRestaurantUsage:
          type: integer
          minimum: 0
          maximum: 100
        offBaseRestaurantUsage:
          type: integer
          minimum: 0
          maximum: 100
        homeCookingFrequency:
          type: integer
          minimum: 0
          maximum: 100